<script type="text/template" id="scorll-datepicker-template">
    <div class="m-picker" v-if="show">
        <div class="m-picker-mark"></div>
        <div class="m-picker-box">
            <div class="m-picker-header">
                <span v-on:click="cancel">取消</span>
                <span v-on:click="sel">确定</span>
            </div>
            <div class="m-picker-content">
                <div class="m-picker-item-box" v-if="type=='datePicker'">
                    <PickerItem :val.sync="year" v-bind:selType="'year'" v-bind:change="change" v-bind:d="dataList[0]"></PickerItem>
                    <PickerItem :val.sync="month" v-bind:selType="'month'" v-bind:change="change" v-bind:d="dataList[1]"></PickerItem>
                    <PickerItem :val.sync="day" v-bind:selType="'day'" v-bind:change="change" v-bind:d="dataList[2]"></PickerItem>
                </div>
                <div class="m-picker-item-box" v-else>
                    <PickerItem v-for="(i,k) in dataList" v-bind:key="k" v-bind:change="change" v-bind:d="i"></PickerItem>
                </div>
            </div>
        </div>
    </div>
</script>
@Html.Action("Template", "Partial", new { id = "ScorllDatepickerItem" })
<script>
    Vue.component('scorll-datepicker', {
        template: '#scorll-datepicker-template',
        name: 'ScorllDatepicker',
        data: function () {
            return {
                show: false,
                type: 'picker',
                dataList: [],
                year: 1,
                month: 1,
                day: 1,
                endTime: '',
                onOk(e) {
                    console.log(e)
                },
                onCancel() {
                }
            }
        },
        computed: {
            isR: function() {
                return this.year % 4 == 0 ? true : false;
            },
            endTimeArr: function() {
                if (this.endTime) {
                    return this.endTime.split('-');
                } else {
                    return [];
                }
            }
        },
        methods: {
            pad: function pad(n) {
                n = Math.floor(n);
                return n < 10 ? '0' + n : n;
            },
            sel: function() {
                this.show = false;
                this.onOk(this.year + '-' + this.month + '-' + this.day);
            },
            itemSel: function() {
            },
            setMonth: function() {
                let c2 = this.month == 2;
                let c1 = [1, 3, 5, 7, 8, 10, 12].join().indexOf(this.month);
                let m = '', newM = [];
                if (c2) {
                    if (this.isR) {
                        m = [1, 29];
                    } else {
                        m = [1, 28];
                    }
                } else if (c1 < 0) {
                    m = [1, 30];
                } else {
                    m = [1, 31];
                }
                let mArr = [], m2 = [1, 12];
                if (this.endTimeArr) {
                    if (this.year == + this.endTimeArr[0]) {
                        m2[1] = + this.endTimeArr[1];
                        if (this.month == +this.endTimeArr[1]) {
                            m[1] = + this.endTimeArr[2];
                        }
                    }
                }
                for (let i = 1; i <= m[1]; i++) {
                    newM.push(i + '日');
                }
                for (let i = 1; i <= m2[1]; i++) {
                    mArr.push(i + '月');
                }
                this.dataList[2] = newM;
                this.dataList[1] = mArr;
            },
            change: function(val, key, type = '') {
                if (type == 'day') {
                    this.day = key + 1;
                } else if (type == 'year') {
                    this.year = val.match(/\d*/g)[0];
                    this.setMonth();
                } else if (type == 'month') {
                    this.month = key + 1;
                    this.setMonth();
                }
            },
            cancel: function() {
                this.show = false;
                this.onCancel();
            }

        },
        mounted: function() {
            this.setMonth();
        },
        props: {
            date: {
                type: Object,
                required: true
            },
            limit: {
                type: Array,
                default: function _default() {
                    return [];
                }
            }
        }
    });
</script>